<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CADNotRegisteredError" xml:space="preserve">
    <value>CAD初始化失败，请检查是否注册组件。</value>
  </data>
  <data name="CreateTableError" xml:space="preserve">
    <value>创建表异常。</value>
  </data>
  <data name="DataBaseDirectory" xml:space="preserve">
    <value>C:\\ProgramData\\GroundWellDesign\\</value>
  </data>
  <data name="DataBaseName" xml:space="preserve">
    <value>yanceng.db</value>
  </data>
  <data name="DeserializeError" xml:space="preserve">
    <value>序列化文件到对象异常。</value>
  </data>
  <data name="DumpEmpty" xml:space="preserve">
    <value>dump到对象为空。</value>
  </data>
  <data name="DumpError" xml:space="preserve">
    <value>dump到对象异常。</value>
  </data>
  <data name="ExportExcelError" xml:space="preserve">
    <value>将DataGrid保存到Excel文件出现异常。</value>
  </data>
  <data name="InitDataBaseTablesError" xml:space="preserve">
    <value>创建数据库表失败。</value>
  </data>
  <data name="InitLogicError" xml:space="preserve">
    <value>初始化运行时公式库失败。</value>
  </data>
  <data name="InsertColumeError" xml:space="preserve">
    <value>插入字段异常。</value>
  </data>
  <data name="KeyLayerError" xml:space="preserve">
    <value>关键层计算出错，请检查数据合理性。</value>
  </data>
  <data name="LayerExistPrompt" xml:space="preserve">
    <value>该岩层记录已存在，是否更新数据库记录？选择\"否\"新增一条。</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>License.lic</value>
  </data>
  <data name="LoadExcelError" xml:space="preserve">
    <value>读取Excel失败。</value>
  </data>
  <data name="OpenDataBaseError" xml:space="preserve">
    <value>打开数据库出现异常。</value>
  </data>
  <data name="OperateNotOk" xml:space="preserve">
    <value>操作失败。</value>
  </data>
  <data name="OperateOk" xml:space="preserve">
    <value>操作成功。</value>
  </data>
  <data name="QueryDBLayersError" xml:space="preserve">
    <value>查询所有岩层时异常。</value>
  </data>
  <data name="QueryDBLayersInfoError" xml:space="preserve">
    <value>查询所有岩层信息不全。</value>
  </data>
  <data name="QueryExistColumeError" xml:space="preserve">
    <value>查询字段是否存在时出现异常。</value>
  </data>
  <data name="QueryExistTableError" xml:space="preserve">
    <value>查询表是否存在时出现异常。</value>
  </data>
  <data name="QueryWellNamesError" xml:space="preserve">
    <value>查询所有地面井名字出错。</value>
  </data>
  <data name="SaveToDBError" xml:space="preserve">
    <value>保存到数据库出现异常。</value>
  </data>
  <data name="SaveToDBInfoError" xml:space="preserve">
    <value>保存到数据库岩层信息不全。</value>
  </data>
  <data name="SelectAtLeastOnePrompt" xml:space="preserve">
    <value>请至少选择一个岩层。</value>
  </data>
  <data name="SerializeError" xml:space="preserve">
    <value>序列化对象到文件异常。</value>
  </data>
  <data name="ShuSanDaiError" xml:space="preserve">
    <value>竖三带计算出错，请检查数据合理性。</value>
  </data>
  <data name="TypeWellNamePrompt" xml:space="preserve">
    <value>请输入矿井名称。</value>
  </data>
  <data name="WriteFileError" xml:space="preserve">
    <value>写入文件失败。</value>
  </data>
</root>